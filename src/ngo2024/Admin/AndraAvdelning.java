/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package ngo2024.Admin;

import java.util.ArrayList;
import java.util.HashMap;
import ngo2024.Validering;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author alexanderabboud
 */
public class AndraAvdelning extends javax.swing.JFrame {

    private InfDB idb;
    private String epost;  
    boolean kontrollOk;
    private HashMap<String, String> anstalldLista;
    private HashMap<String, String> stadLista;
    private HashMap<String, String> avdLista;
    
    /**
     * Initierar AndraAvdelning objekt 
     * låter en administratör ändra en avdelning
     *
     * @param idb initierar fält för att interagera med databasen
     * @param inloggadAnvandare eposten till den inloggade användaren
     */

    public AndraAvdelning(InfDB idb, String inloggadAnvandare) {
        this.idb=idb;
        this.epost=inloggadAnvandare;
        kontrollOk=false;
        initComponents();
        anstalldLista = new HashMap<>();
        stadLista = new HashMap<>();
        avdLista = new HashMap<>();
        fyllProjektChef();
        fyllStad();
        fyllAvdelning();
        lblLyckades.setVisible(false);
        lblError.setVisible(false);
    }
    
    /**
     * fyller i combo box med hela namn på projektchefer
     */

     private void fyllProjektChef(){
        cbChef.removeAllItems();
        String sqlFraga="SELECT CONCAT(fornamn, ' ', efternamn) FROM anstalld WHERE aid in (SELECT aid FROM handlaggare)";
        
        try{
            ArrayList<String> chefLista=idb.fetchColumn(sqlFraga);
            
            for(String anstNamn : chefLista){
                String sqlAid = "SELECT aid from anstalld WHERE "
                        + "CONCAT(fornamn, ' ', efternamn) = '" + anstNamn + "'";
                String i = idb.fetchSingle(sqlAid);
                cbChef.addItem(anstNamn);
                anstalldLista.put(i, anstNamn);
                
            }
            
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }}
    
     /**
     * fyller i combo box med namn på städer
     */

    private void fyllStad(){
        cbStad.removeAllItems();
        //fyller stads listan
        String sqlLand = "SELECT namn FROM stad ";
        
        try{

        ArrayList<String> allaStaderLista =  idb.fetchColumn(sqlLand);
                                             
            for(String stadNamn : allaStaderLista){
               String sqlLid = "SELECT sid FROM stad WHERE "
                       + "namn = '" + stadNamn + "'";
               String i = idb.fetchSingle(sqlLid);
               cbStad.addItem(stadNamn);
               stadLista.put(i, stadNamn);
            }
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
    }
    
    /**
     * fyller i combo box med namn på avdelningar
     */

    private void fyllAvdelning(){
        cbAvdelning.removeAllItems();
        //fyller stads listan
        String sqlLand = "SELECT namn FROM avdelning ";
        
        try{

        ArrayList<String> avdeLista =  idb.fetchColumn(sqlLand);
                                             
            for(String avdNamn : avdeLista){
               String sqlLid = "SELECT avdid FROM avdelning WHERE "
                       + "namn = '" + avdNamn + "'";
               String i = idb.fetchSingle(sqlLid);
               cbAvdelning.addItem(avdNamn);
               avdLista.put(i, avdNamn);
            }
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
    }
    
    
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTelefon = new javax.swing.JLabel();
        tfTelefon = new javax.swing.JTextField();
        tfEpost = new javax.swing.JTextField();
        cbChef = new javax.swing.JComboBox<>();
        tfAdress = new javax.swing.JTextField();
        cbStad = new javax.swing.JComboBox<>();
        lblAdress = new javax.swing.JLabel();
        tfBeskrivning = new javax.swing.JTextField();
        lblEpost = new javax.swing.JLabel();
        tfNamn = new javax.swing.JTextField();
        lblTelefonBad = new javax.swing.JLabel();
        lblEpostBad = new javax.swing.JLabel();
        lblChef = new javax.swing.JLabel();
        lblStad = new javax.swing.JLabel();
        lblAdressBad = new javax.swing.JLabel();
        lblBeskrivning = new javax.swing.JLabel();
        lblBeskrivningBad = new javax.swing.JLabel();
        lblNamn = new javax.swing.JLabel();
        lblNamnBad = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbAvdelning = new javax.swing.JComboBox<>();
        btnValj = new javax.swing.JButton();
        btnAndra = new javax.swing.JButton();
        lblLyckades = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTelefon.setText("Telefon");

        tfTelefon.setText("123-123-1234");
        tfTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTelefonActionPerformed(evt);
            }
        });

        tfEpost.setText("example@mail.com");
        tfEpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEpostActionPerformed(evt);
            }
        });

        cbChef.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        tfAdress.setText("123 blabla, bobla");

        cbStad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        lblAdress.setText("Adress");

        tfBeskrivning.setText("Beskrivning");

        lblEpost.setText("Epost");

        tfNamn.setText("Namn");

        lblTelefonBad.setForeground(new java.awt.Color(255, 0, 51));
        lblTelefonBad.setText("!");

        lblEpostBad.setForeground(new java.awt.Color(255, 0, 51));
        lblEpostBad.setText("!");

        lblChef.setText("Chef");

        lblStad.setText("Stad");

        lblAdressBad.setForeground(new java.awt.Color(255, 0, 51));
        lblAdressBad.setText("!");

        lblBeskrivning.setText("Beskrivning");

        lblBeskrivningBad.setForeground(new java.awt.Color(255, 0, 51));
        lblBeskrivningBad.setText("!");

        lblNamn.setText("Namn");

        lblNamnBad.setForeground(new java.awt.Color(255, 0, 51));
        lblNamnBad.setText("!");

        jLabel1.setText("Ändra avdelning");

        cbAvdelning.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        btnValj.setText("Välj");
        btnValj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjActionPerformed(evt);
            }
        });

        btnAndra.setText("Ändra");
        btnAndra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAndraActionPerformed(evt);
            }
        });

        lblLyckades.setForeground(new java.awt.Color(0, 204, 0));
        lblLyckades.setText("Lyckades");

        lblError.setForeground(new java.awt.Color(255, 51, 0));
        lblError.setText("Error!");

        btnTillbaka.setText("X");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTillbaka))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbAvdelning, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnValj))
                            .addComponent(lblEpost)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAdress)
                                .addGap(56, 56, 56)
                                .addComponent(tfAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAdressBad))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStad)
                                .addGap(70, 70, 70)
                                .addComponent(cbStad, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefon)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(tfTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTelefonBad))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(tfEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEpostBad))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBeskrivning)
                                    .addComponent(lblNamn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNamnBad)
                                    .addComponent(lblBeskrivningBad)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblChef)
                                    .addComponent(btnAndra))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLyckades)
                                        .addGap(47, 47, 47)
                                        .addComponent(lblError))
                                    .addComponent(cbChef, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 154, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnTillbaka))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAvdelning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnValj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNamn)
                    .addComponent(tfNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNamnBad))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBeskrivning)
                    .addComponent(tfBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBeskrivningBad))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAdressBad))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEpostBad)
                            .addComponent(tfEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEpost))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelefonBad)
                            .addComponent(tfTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefon)))
                    .addComponent(lblAdress))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStad))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChef)
                    .addComponent(cbChef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAndra)
                    .addComponent(lblLyckades)
                    .addComponent(lblError))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTelefonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTelefonActionPerformed

    private void tfEpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEpostActionPerformed

    }//GEN-LAST:event_tfEpostActionPerformed

    private void valjAvdelning(){
        String avdNamn= (String) cbAvdelning.getSelectedItem();
        String beskrivning=" ";
        String adress=" ";
        String epost=" ";
        String telefon=" ";
        String stad=" ";
        String nChef=" ";
        
        
        
        try{
            beskrivning=idb.fetchSingle("SELECT beskrivning FROM avdelning WHERE namn= '" + avdNamn + "'");
            adress=idb.fetchSingle("SELECT adress FROM avdelning WHERE namn= '" + avdNamn + "'");
            epost=idb.fetchSingle("SELECT epost FROM avdelning WHERE namn= '" + avdNamn + "'");
            telefon=idb.fetchSingle("SELECT telefon FROM avdelning WHERE namn= '" + avdNamn + "'");
            nChef = idb.fetchSingle("SELECT CONCAT(fornamn, ' ', efternamn) "
                                 + "FROM anstalld WHERE aid = (SELECT chef FROM avdelning WHERE namn= '" + avdNamn + "')");
            stad=idb.fetchSingle("SELECT namn "
                                 + "FROM stad WHERE sid = (SELECT stad FROM avdelning WHERE namn= '" + avdNamn + "')");

            
        }catch(InfException ex){
            System.out.println(ex.getMessage());
}
        tfNamn.setText(avdNamn);
        tfBeskrivning.setText(beskrivning);
        tfAdress.setText(adress);
        tfEpost.setText(epost);
        tfTelefon.setText(telefon);
        if (stad != null) {
            cbStad.setSelectedItem(stad);
        } else {
            cbStad.setSelectedIndex(-1); 
        }

        if (nChef != null) {
            cbChef.setSelectedItem(nChef);
        } else {
            cbChef.setSelectedIndex(-1); 
        }
       
    }
    
    
   public String getAvdid(){
       String avdNamn= (String) cbAvdelning.getSelectedItem();
       String avddd=" ";
       String sqlFraga="SELECT avdid FROM avdelning WHERE namn= '" + avdNamn + "'";
       try{
           avddd=idb.fetchSingle(sqlFraga);
       }
       catch(InfException ex){
            System.out.println(ex.getMessage());
        }
       return avddd;
   }
    
    
    
    
    
    
    
    private void btnValjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjActionPerformed
       valjAvdelning();
    }//GEN-LAST:event_btnValjActionPerformed

    private String getChef(){
        String nChef=(String) cbChef.getSelectedItem();
        String sqlFraga="SELECT aid FROM anstalld WHERE CONCAT(fornamn, ' ', efternamn)= '" + nChef + "'";
        String aid=" ";
        try{
            aid=idb.fetchSingle(sqlFraga);
            
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
        return aid;
    }
    
    private String getStadSid(){
        String stad=(String) cbStad.getSelectedItem();
        String sqlFraga="SELECT sid FROM stad WHERE namn= '" + stad + "'";
        String sid=" ";
        try{
            sid=idb.fetchSingle(sqlFraga);
            
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
        return sid;
    }
    
    
    
    public void gorAndring(){
        int avdid=Integer.parseInt(getAvdid());
        String avdNamn= tfNamn.getText();
        String beskrivning=tfBeskrivning.getText();
        String adress=tfAdress.getText();
        String epost=tfEpost.getText();
        String telefon=tfTelefon.getText();
        String stad= getStadSid();
        String nChef=getChef();
        
        String sqlFraga="UPDATE avdelning SET namn = '" + avdNamn + "', beskrivning= '" + beskrivning
                + "', adress= '" + adress + "', epost= '" + epost + "', telefon = '" + telefon
                + "', stad= " + stad + ", chef= " + nChef + " where avdid =" + avdid;
        
        try{
            idb.update(sqlFraga);
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
        
    }
    
    
    
    private void btnAndraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndraActionPerformed
        totalKontroll();
            if(kontrollOk==true){
                gorAndring();
                lblLyckades.setVisible(true);
                lblError.setVisible(false);
                fyllAvdelning();
            }
            else{
                lblError.setVisible(true);
                lblLyckades.setVisible(false);}
    }//GEN-LAST:event_btnAndraActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

        //kontroller kommer här
    
    private void totalKontroll() {
    Boolean totOk = true;

    if (!namnKontroll()) {
        totOk = false;
        lblNamnBad.setVisible(true);
    } else if (!beskrivningKontroll()) {  
        totOk = false;
        lblBeskrivningBad.setVisible(true);
    } else if (!adressKontroll(idb)) {  
        totOk = false;
        lblAdressBad.setVisible(true);
    } else if (!telefonKontroll(idb)) {  
        totOk = false;
        lblTelefonBad.setVisible(true);
    } else if (!epostKontroll(idb)) {  
        totOk = false;
        lblEpostBad.setVisible(true);
    }

    kontrollOk = totOk;
}

    
    public boolean adressKontroll(InfDB idb) {
        Validering valid = new Validering(idb);
        String adress = tfAdress.getText();
        if (valid.checkAdress(adress)&& valid.checkStorlek(255, adress)) {
            lblAdressBad.setVisible(false);
            return true;
        } else {
            lblAdressBad.setVisible(true);
            return false;
        }}
    
    public boolean telefonKontroll(InfDB idb) {
        Validering valid = new Validering(idb);
        String telefon = tfTelefon.getText();
    if (valid.checkTelefon(telefon)&& valid.checkStorlek(20, telefon)) {
            lblTelefonBad.setVisible(false);
            return true;
    } else {
            lblTelefonBad.setVisible(true);
            return false;
    }
    }
    
    public boolean epostKontroll(InfDB idb){
    Validering valid = new Validering(idb); 
    
    // Hämta text från textfältet
    String epost = tfEpost.getText(); 
    
    // Kontrollera om e-postadressen är giltig
    if (valid.checkEpost(epost)&& valid.checkStorlek(255, epost)) {
        lblEpostBad.setVisible(false); // Göm varning
        return true;
    } else {
        lblEpostBad.setVisible(true); // Visa varning
        return false;
        
    }}
    
    private boolean namnKontroll(){
        Validering valid = new Validering(idb);
        String namn = tfNamn.getText();
        // kontrollerar namn format
    if (valid.checkNamn(namn) && valid.checkStorlek(255, namn)) {
            lblNamnBad.setVisible(false);
            return true;
    } else {
            lblNamnBad.setVisible(true);
            return false;
    }
}
    
   private boolean beskrivningKontroll(){
           Validering valid = new Validering(idb);
        String besk = tfBeskrivning.getText();
        // samma som alla andra kontroller men använder förnamns valideringen då de gör samma sak
    if (valid.checkBeskrivning(besk)&& valid.checkStorlek(255, besk)) {
            lblBeskrivningBad.setVisible(false);
            return true;
    } else {
            lblBeskrivningBad.setVisible(true);
            return false;
    }
} 
    
   private String getPChef(){
        String selectedPerson = (String) cbChef.getSelectedItem();
        String aid = " ";
        for(String id : anstalldLista.keySet()){
            String namn = anstalldLista.get(id);
            if(selectedPerson != null && selectedPerson.equals(namn)){
                aid = id;               
            }
        } 
        return aid;
    }
   
   private String getStad(){
       String namn= (String) cbStad.getSelectedItem();
        String sid = " ";
        for(String id : stadLista.keySet()){
            String ssStad = stadLista.get(id);
            if(namn != null && namn.equals(ssStad)){
                sid = id;               
            }
        } 
        return sid;
   }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AndraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AndraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AndraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AndraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new AndraAvdelning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAndra;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btnValj;
    private javax.swing.JComboBox<String> cbAvdelning;
    private javax.swing.JComboBox<String> cbChef;
    private javax.swing.JComboBox<String> cbStad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblAdressBad;
    private javax.swing.JLabel lblBeskrivning;
    private javax.swing.JLabel lblBeskrivningBad;
    private javax.swing.JLabel lblChef;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblEpostBad;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblLyckades;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblNamnBad;
    private javax.swing.JLabel lblStad;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTelefonBad;
    private javax.swing.JTextField tfAdress;
    private javax.swing.JTextField tfBeskrivning;
    private javax.swing.JTextField tfEpost;
    private javax.swing.JTextField tfNamn;
    private javax.swing.JTextField tfTelefon;
    // End of variables declaration//GEN-END:variables

}
