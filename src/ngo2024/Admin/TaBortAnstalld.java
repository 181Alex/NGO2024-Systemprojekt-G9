/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024.Admin;

import ngo2024.Validering;
import ngo2024.Admin.AdminMeny;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;

/**
 *
 * @author alexanderabboud
 */
public class TaBortAnstalld extends javax.swing.JFrame {

    private InfDB idb;
    private String inloggadAnvandare;
    
    /**
     * Initierar TaBortAnstalld objekt 
     * Låter administratör ta bort anställda
     *
     * @param idb initierar fält för att interagera med databasen
     * @param inloggadAnvandare eposten till den inloggade användaren
     */

    public TaBortAnstalld(InfDB idb, String inloggadAnvandare) {
        this.idb=idb;
        this.inloggadAnvandare=inloggadAnvandare;
        initComponents();
        lblBorttagen.setVisible(false);
        fyllCb();
    }
    
    /**
     * fyller i combo box med för och efternamn på anställda
     */
    
    public void fyllCb(){
        cbValjAnstalld.removeAllItems();
        String sqlFraga="SELECT CONCAT(fornamn, ' ', efternamn) AS namn FROM anstalld";
        
        ArrayList<String> namnLista=new ArrayList<>();
        
        try{
            namnLista=idb.fetchColumn(sqlFraga);
            
            for(String namn:namnLista){
                cbValjAnstalld.addItem(namn);
            }
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }
    
    /**
     *  Hämtar ut förnamn
     * @param fullName hämtar ut hela namnet
     */

    public String getFirstName(String fullName) {
        String[] nameParts = fullName.split(" ");
        if (nameParts.length > 0) {
            return nameParts[0];
        } else {
            return "";
        }
    }

    /**
     *  hämtar ut efternamn
     * @param fullName hämtar ut hela namnet
     */

    public String getLastName(String fullName) {
        String[] nameParts = fullName.split(" ");
        if (nameParts.length > 1) {
            return nameParts[nameParts.length - 1];
        } else {
            return "";
        }
    }
    
    /**
     *  hämtar ut anställdas ID
     * @param namn den anställdas namn???
     */

    public String selectAid(String namn){
        String fNamn=getFirstName(namn);
        String eNamn=getLastName(namn);
        String sAid="111";
        try{
            String sqlFraga="SELECT aid FROM anstalld where fornamn='" + fNamn + "' AND efternamn ='" + eNamn + "'";
            sAid=idb.fetchSingle(sqlFraga);
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        return sAid;
    }
    
    /**
     * hämtar ut en anställds epost
     */

    public String getEpost(){
       String namn=cbValjAnstalld.getSelectedItem().toString();
       String sAid=selectAid(namn);
       String epost=" ";
       
       int aid=Integer.parseInt(sAid);
       String sqlFraga="SELECT epost FROM anstalld WHERE aid=" + aid;
       try{
           epost=idb.fetchSingle(sqlFraga);
       }
       catch(Exception ex){
            System.out.println(ex.getMessage());
        }
       return epost;
    }
    
    /**
     * hämtar ut vilken behörighet en anställd har
     */
    
    public String vilkenBehorighet(){
         Validering valid = new Validering(idb);
         boolean arAdmin=valid.arAdmin(getEpost());
         String behorighet=" ";
         if(arAdmin==true){
            behorighet="admin";
         }
         else{
             behorighet="hlr"; //hlr=handläggare
         }
         return behorighet;
        
    }
    
    /**
     * tar bort en administratör
     */

    public void taBortAdmin(int aid){
        
        String sqlFraga="DELETE FROM admin WHERE aid=" + aid;
        try{
            idb.delete(sqlFraga);
            
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }
    
    /**
     * tar bort en handläggare
     */

    public void taBortHandlaggare(int aid){
        
        String sqlFraga="DELETE FROM handlaggare WHERE aid=" + aid;
        try{
            idb.delete(sqlFraga);
            
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAid = new javax.swing.JLabel();
        lblNamn = new javax.swing.JLabel();
        cbValjAnstalld = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnTaBort = new javax.swing.JButton();
        lblBorttagen = new javax.swing.JLabel();
        btnValj = new javax.swing.JButton();
        btnTillbaka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblAid.setText("Aid");

        lblNamn.setText("Namn");

        cbValjAnstalld.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        jLabel3.setText("Välj anställd att ta bort");

        btnTaBort.setText("Ta bort");
        btnTaBort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortActionPerformed(evt);
            }
        });

        lblBorttagen.setForeground(new java.awt.Color(0, 204, 0));
        lblBorttagen.setText("Användare borttagen");
        lblBorttagen.setBorder(new javax.swing.border.MatteBorder(null));
        lblBorttagen.setMaximumSize(new java.awt.Dimension(211, 17));
        lblBorttagen.setSize(new java.awt.Dimension(100, 17));

        btnValj.setText("Välj");
        btnValj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjActionPerformed(evt);
            }
        });

        btnTillbaka.setText("X");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBorttagen, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTaBort)
                                .addGap(26, 26, 26)
                                .addComponent(lblAid)
                                .addGap(18, 18, 18)
                                .addComponent(lblNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbValjAnstalld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnValj)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(btnTillbaka)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbValjAnstalld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnValj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAid)
                    .addComponent(lblNamn)
                    .addComponent(btnTaBort))
                .addGap(18, 18, 18)
                .addComponent(lblBorttagen, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnValjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjActionPerformed
       String namn=cbValjAnstalld.getSelectedItem().toString();
       
       lblNamn.setText(namn);
       lblAid.setText(selectAid(namn));   
       
    }//GEN-LAST:event_btnValjActionPerformed

    private void btnTaBortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortActionPerformed
       String namn=cbValjAnstalld.getSelectedItem().toString();
       String sAid=selectAid(namn);
       int aid=Integer.parseInt(sAid);
       String val=vilkenBehorighet();
       // tar bort behöriogheterna innan personen tas bort, går annars ej att ta bort person.
       if(val.equals("admin")){
           taBortAdmin(aid);
       }
       else{
           taBortHandlaggare(aid);
       }
       
       //tar bort själva personen
       String sql="DELETE FROM anstalld WHERE aid=" + aid;
       
       try{
           idb.delete(sql);
       }
       catch(Exception ex){
            System.out.println(ex.getMessage());
        }
       lblBorttagen.setVisible(true);
       fyllCb();
       
    }//GEN-LAST:event_btnTaBortActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaBortAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaBortAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaBortAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaBortAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new TaBortAnstalld().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTaBort;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btnValj;
    private javax.swing.JComboBox<String> cbValjAnstalld;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAid;
    private javax.swing.JLabel lblBorttagen;
    private javax.swing.JLabel lblNamn;
    // End of variables declaration//GEN-END:variables
}
