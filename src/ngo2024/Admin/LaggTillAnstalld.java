/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024.Admin;
import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import java.util.Random;
import ngo2024.Validering;
import oru.inf.InfException;

/**
 *
 * @author alexanderabboud
 */
public class LaggTillAnstalld extends javax.swing.JFrame {
private InfDB idb;
private boolean created;
private Random randomizer;
boolean kontrollOk;
private String epost;
private HashMap<String, String> mentorLista;

     /**
     * Initierar LaggTillAnstalld objekt 
     * Låter en administratör lägga till nya anställda
     *
     * @param idb initierar fält för att interagera med databasen
     * @param epost eposten till den inloggade användaren
     */

    public LaggTillAnstalld(InfDB idb,String epost) {
        this.idb=idb;
        mentorLista = new HashMap<>();
        initComponents();
        created=false;
        kontrollOk=false;
        gomBad();
        gomFalt();
        lblLyckades.setVisible(false);
        lblError.setVisible(false);
        randomizer=new Random();
        this.epost=epost;
    }
    
    private void gomBad(){
        lblDatumBad1.setVisible(false);
        lblEpostBad.setVisible(false);
        lblTelefonBad.setVisible(false);
        lblAdressBad.setVisible(false);
        lblEfternamnBad.setVisible(false);
        lblFornamnBad.setVisible(false);
        lblAnsvarBad.setVisible(false);
    }
    
    //gömmer fältet mentor, comboboxen och meddelande som kommer upp efter hand
    private void gomFalt(){
        lblMentor.setVisible(false);
        cbMentor.setVisible(false);    
        cbIngenMentor.setVisible(false);
        lblAid.setVisible(false);
        tfAnsvarighetsOmrade.setVisible(false);
    }
    
    private void visaFalt(){
        lblMentor.setVisible(true);
        cbMentor.setVisible(true);    
        cbIngenMentor.setVisible(true);
        lblAid.setVisible(true);
        tfAnsvarighetsOmrade.setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        btnSkapa = new javax.swing.JButton();
        lblFornamn = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        lblEpost = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblAnstallDatum = new javax.swing.JLabel();
        lblLosenord = new javax.swing.JLabel();
        lblAvdelning = new javax.swing.JLabel();
        tfAnstallDatum = new javax.swing.JTextField();
        tfTelefon = new javax.swing.JTextField();
        tfEpost = new javax.swing.JTextField();
        tfAdress = new javax.swing.JTextField();
        tfEfternamn = new javax.swing.JTextField();
        tfFornamn = new javax.swing.JTextField();
        tfLosenord = new javax.swing.JTextField();
        lblEpostBad = new javax.swing.JLabel();
        cbAvdelning = new javax.swing.JComboBox<>();
        lblLyckades = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        btnRandom = new javax.swing.JButton();
        lblDatumBad1 = new javax.swing.JLabel();
        lblTelefonBad = new javax.swing.JLabel();
        lblAdressBad = new javax.swing.JLabel();
        lblEfternamnBad = new javax.swing.JLabel();
        lblFornamnBad = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        chbAdmin = new javax.swing.JCheckBox();
        chbHandlaggare = new javax.swing.JCheckBox();
        tfAnsvarighetsOmrade = new javax.swing.JTextField();
        cbMentor = new javax.swing.JComboBox<>();
        lblMentor = new javax.swing.JLabel();
        cbIngenMentor = new javax.swing.JCheckBox();
        lblAnsvarBad = new javax.swing.JLabel();
        lblAid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSkapa.setText("Skapa");
        btnSkapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaActionPerformed(evt);
            }
        });

        lblFornamn.setText("Förnamn");

        lblEfternamn.setText("Efternamn");

        lblAdress.setText("Adress");

        lblEpost.setText("Epost");

        lblTelefon.setText("Telefon");

        lblAnstallDatum.setText("Anställningsdatum");

        lblLosenord.setText("Lösenord");

        lblAvdelning.setText("Avdelning");

        tfAnstallDatum.setText("yyyy-mm-dd");
        tfAnstallDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAnstallDatumActionPerformed(evt);
            }
        });

        tfTelefon.setText("123-123-1234");
        tfTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTelefonActionPerformed(evt);
            }
        });

        tfEpost.setText("example@mail.com");
        tfEpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEpostActionPerformed(evt);
            }
        });

        tfAdress.setText("123 blabla, bobla");

        tfEfternamn.setText("Efternamn");

        tfFornamn.setText("Förnamn");

        tfLosenord.setText("Lösenord");
        tfLosenord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLosenordActionPerformed(evt);
            }
        });

        lblEpostBad.setForeground(new java.awt.Color(255, 0, 51));
        lblEpostBad.setText("!");

        cbAvdelning.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Klimat", "Samhälle", "Teknik" }));

        lblLyckades.setForeground(new java.awt.Color(51, 204, 0));
        lblLyckades.setText("Lyckades!");

        lblError.setForeground(new java.awt.Color(255, 0, 51));
        lblError.setText("Error!");

        btnRandom.setText("Random");
        btnRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomActionPerformed(evt);
            }
        });

        lblDatumBad1.setForeground(new java.awt.Color(255, 0, 51));
        lblDatumBad1.setText("!");

        lblTelefonBad.setForeground(new java.awt.Color(255, 0, 51));
        lblTelefonBad.setText("!");

        lblAdressBad.setForeground(new java.awt.Color(255, 0, 51));
        lblAdressBad.setText("!");

        lblEfternamnBad.setForeground(new java.awt.Color(255, 0, 51));
        lblEfternamnBad.setText("!");

        lblFornamnBad.setForeground(new java.awt.Color(255, 0, 51));
        lblFornamnBad.setText("!");

        btnTillbaka.setText("X");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        chbAdmin.setText("Admin");
        chbAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbAdminActionPerformed(evt);
            }
        });

        chbHandlaggare.setText("Handläggare");
        chbHandlaggare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbHandlaggareActionPerformed(evt);
            }
        });

        tfAnsvarighetsOmrade.setText("AnsvarighetsOmråde");

        cbMentor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMentorActionPerformed(evt);
            }
        });

        lblMentor.setText("Mentor");

        cbIngenMentor.setText("Ingen mentor");
        cbIngenMentor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIngenMentorActionPerformed(evt);
            }
        });

        lblAnsvarBad.setForeground(new java.awt.Color(255, 0, 0));
        lblAnsvarBad.setText("!");

        lblAid.setText("aid");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTillbaka))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLyckades)
                                        .addGap(36, 36, 36)
                                        .addComponent(lblError)
                                        .addGap(36, 36, 36))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chbAdmin)
                                        .addGap(18, 18, 18)
                                        .addComponent(chbHandlaggare)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfAnsvarighetsOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSkapa))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAnsvarBad, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAnstallDatum)
                                    .addComponent(lblTelefon)
                                    .addComponent(lblEpost)
                                    .addComponent(lblAdress)
                                    .addComponent(lblEfternamn)
                                    .addComponent(lblFornamn)
                                    .addComponent(lblLosenord)
                                    .addComponent(lblMentor)
                                    .addComponent(lblAvdelning))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfAnstallDatum)
                                            .addComponent(tfLosenord)
                                            .addComponent(tfTelefon)
                                            .addComponent(tfEpost)
                                            .addComponent(tfAdress)
                                            .addComponent(tfEfternamn)
                                            .addComponent(tfFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEfternamnBad)
                                            .addComponent(lblFornamnBad)
                                            .addComponent(lblEpostBad)
                                            .addComponent(lblDatumBad1)
                                            .addComponent(lblTelefonBad)
                                            .addComponent(lblAdressBad)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(btnRandom, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbMentor, 0, 238, Short.MAX_VALUE)
                                            .addComponent(cbAvdelning, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblAid)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbIngenMentor)))))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFornamn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFornamnBad)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEfternamn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblEfternamnBad)
                                .addComponent(tfEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAdress)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAdressBad)))
                        .addGap(12, 12, 12)
                        .addComponent(lblEpost))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEpostBad)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblTelefon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAnstallDatum))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefonBad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAnstallDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDatumBad1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLosenord, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRandom)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvdelning)
                    .addComponent(cbAvdelning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMentor)
                    .addComponent(cbMentor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngenMentor)
                    .addComponent(lblAid))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbAdmin)
                    .addComponent(chbHandlaggare)
                    .addComponent(tfAnsvarighetsOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAnsvarBad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSkapa)
                    .addComponent(lblLyckades)
                    .addComponent(lblError))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTelefonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTelefonActionPerformed

    
    private void tfEpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEpostActionPerformed
    
    }//GEN-LAST:event_tfEpostActionPerformed
    // TODO add your handling code here:

    private void tfLosenordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLosenordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLosenordActionPerformed

    private void btnSkapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaActionPerformed
            totalKontroll(idb);
            boolean admin=isAdmin();
            int hogsta=hogstaAid(idb);
          
        if(kontrollOk==true && alltMed()==true){
            try{
            String sqlFraga="INSERT INTO anstalld VALUES(" + hogsta + ", '" + tfFornamn.getText() +"', '" 
                    + tfEfternamn.getText() + "', '" + tfAdress.getText() + "', '"+tfEpost.getText() + "', '" + tfTelefon.getText() + "', '" 
                    + tfAnstallDatum.getText() + "', '" + tfLosenord.getText() + "', " + getAvdelning() + ")";
            String sqlA=" ";
            String sqlH=" ";
            if(admin==true){
                sqlA="INSERT INTO admin VALUES(" + hogsta + ", " + 1 + ")";
                idb.insert(sqlFraga);
                idb.insert(sqlA);
                System.out.println(sqlA);
                
            }
            else if(admin==false){
                if(!cbIngenMentor.isSelected()){
                sqlH="INSERT INTO handlaggare VALUES(" + hogsta + ", '" + tfAnsvarighetsOmrade.getText() + "', " + getSelectedAid() + ")";
                idb.insert(sqlFraga);
                idb.insert(sqlH);
                System.out.println(sqlH);}
                else {
                    sqlH="INSERT INTO handlaggare VALUES(" + hogsta + ", '" + tfAnsvarighetsOmrade.getText() + "', null)";
                idb.insert(sqlFraga);
                idb.insert(sqlH);
                System.out.println(sqlH);}
                }
            }
        
            catch(InfException ex){
                System.out.println(ex.getMessage());
                }
            lblLyckades.setVisible(true);
            lblError.setVisible(false);
            }
        
        else if (kontrollOk==false){
            lblError.setVisible(true);
            
        }
    }//GEN-LAST:event_btnSkapaActionPerformed

    public void totalKontroll(InfDB idb){
        Boolean totOk=true;
        if(epostKontroll(idb)==false){
            totOk=false;
        }
        else if(!datumKontroll(idb)){
            totOk=false;
        }
        else if(!fornamnKontroll(idb)) {
        totOk = false;
        }
        else if(!efternamnKontroll(idb)) {
        totOk = false;
        }
        else if(!adressKontroll(idb)) {
        totOk = false;
        }
        else if(!telefonKontroll(idb)) {
        totOk = false;
        }
        else if(!AnsvarKontroll(idb)){
            totOk=false;
        }
        
        kontrollOk=totOk;
    }

    
    public boolean datumKontroll(InfDB idb){
        Validering valid = new Validering(idb); 
    
    // Hämta text från textfältet
    String datum = tfAnstallDatum.getText(); 
    
    // Kontrollera om e-postadressen är giltig
    if (valid.checkDatum(datum)) {
        lblDatumBad1.setVisible(false); // Göm varning
        return true;
    } else {
        lblDatumBad1.setVisible(true); // Visa varning
        return false;
    }
    }
    
    /**
     * Anropar kontroll av att nytt förnamn innehåller accepterade tecken 
     * Ger false om valideringen visar att fel uppstått
     * 
     * @param idb databasen som kallas för validering
     */
    public boolean fornamnKontroll(InfDB idb) {
        Validering valid = new Validering(idb);
        String fornamn = tfFornamn.getText();
    if (valid.checkFornamn(fornamn)&& valid.checkStorlek(100, fornamn)) {
        lblFornamnBad.setVisible(false); // Göm varning
        return true;
    } else {
        lblFornamnBad.setVisible(true); // Visa varning
        return false;
    }
    }
    
    /**
     * Anropar kontroll av att nytt efternamn innehåller accepterade tecken 
     * Ger false om valideringen visar att fel uppstått
     * 
     * @param idb databasen som används för validering
     */
    public boolean efternamnKontroll(InfDB idb) {
        Validering valid = new Validering(idb);
        String efternamn = tfEfternamn.getText();
    if (valid.checkEfternamn(efternamn) && valid.checkStorlek(100, efternamn)) {
            lblEfternamnBad.setVisible(false);
            return true;
    } else {
            lblEfternamnBad.setVisible(true);
            return false;
        }
    }
    
    /**
     * Anropar kontroll av att ny adress är korrekt formaterad
     * samt innehåller accepterade tecken 
     * Ger false om valideringen visar att fel uppstått
     * 
     * @param idb databasen som används för validering
     */
    public boolean adressKontroll(InfDB idb) {
        Validering valid = new Validering(idb);
        String adress = tfAdress.getText();
        if (valid.checkAdress(adress)&& valid.checkStorlek(255, adress)) {
            lblAdressBad.setVisible(false);
            return true;
        } else {
            lblAdressBad.setVisible(true);
            return false;
        }}
    
    /**
     * Anropar kontroll av att nytt telefonnummer är korrekt formaterad,
     * samt innehåller accepterade tecken 
     * Ger false om valideringen visar att fel uppstått
     * 
     * @param idb databasen som används för validering
     */
    public boolean telefonKontroll(InfDB idb) {
        Validering valid = new Validering(idb);
        String telefon = tfTelefon.getText();
    if (valid.checkTelefon(telefon)&& valid.checkStorlek(20, telefon)) {
            lblTelefonBad.setVisible(false);
            return true;
    } else {
            lblTelefonBad.setVisible(true);
            return false;
    }
    }
    
    /**
     * Anropar kontroll av att ny epost är korrekt formaterad,
     * samt innehåller accepterade tecken 
     * Ger false om valideringen visar att fel uppstått
     * 
     * @param idb databasen som används för validering
     */
    public boolean epostKontroll(InfDB idb){
    Validering valid = new Validering(idb); 
    
    // Hämta text från textfältet
    String tfepost = tfEpost.getText(); 
    
    // Kontrollera om e-postadressen är giltig
    if (valid.checkEpost(tfepost)&& valid.checkStorlek(255, tfepost)) {
        lblEpostBad.setVisible(false); // Göm varning
        return true;
    } else {
        lblEpostBad.setVisible(true); // Visa varning
        return false;
        
    }}
<<<<<<< Updated upstream
<<<<<<< HEAD
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
>>>>>>> parent of b0e1161 (djdjd)

    
    public boolean mentorKontroll(InfDB idb){
    Validering valid = new Validering(idb); 
    if(chbAdmin.isSelected()==true){
        return true;
    }
    else{
    // Hämta text från textfältet
    String mentor = tfMentor.getText(); 
    
    // Kontrollera om Mentor är giltig
    if (valid.checkMentor(mentor)) {
        return true;
    } else {
        return false;
    }
    }}
<<<<<<< HEAD
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> parent of b0e1161 (djdjd)
=======
>>>>>>> Stashed changes
    
    /**
     * Kontrollerar att Ansvarighets Område label fylls med accepterade tecken 
     * samt inte överskrider visst antal tecken
     * 
     * @param idb databasen som kallas för validering
     */
    public boolean AnsvarKontroll(InfDB idb){
            Validering valid = new Validering(idb); 
          // Hämta text från textfältet
    String ansvar = tfAnsvarighetsOmrade.getText(); 
    
    // Kontrollera om ANsvarighetsområdet är ok är giltig
    if(valid.checkAnsvar(ansvar)&& valid.checkStorlek(255, ansvar)) {
        return true;
    } else {
        return false;
        
    }}  
    
    /**
     * Skapar nytt aid till ny användare. 
     * Tilldelar nummer som är +1 efter högsta nuvarande aid
     * 
     * @param idb databasen som kallas för validering
     */
    public int hogstaAid(InfDB idb){
        int hogsta=0;
        String sqlFraga="Select MAX(aid) FROM anstalld";
        try{
            String max=idb.fetchSingle(sqlFraga);
            hogsta=Integer.parseInt(max);
        }
        catch(InfException ex){
            System.out.println(ex.getMessage());
        }
        System.out.println(hogsta);
        return hogsta+1;
    }
    
    /**
     * Hämtar vilken avdelning användaren ska tilldelas
     * hämtas från combo box vald avdelning
     */
private int getAvdelning(){
    int avdelning=0;
    String val=cbAvdelning.getSelectedItem().toString();
    switch (val) {
        case "Klimat":
            avdelning=1;
            break;
        case "Teknik":
            avdelning=3;
            break;
        case "Samhälle":
            avdelning=2;
            break;
        default:
            break;
    }
   return avdelning;
}

<<<<<<< Updated upstream
<<<<<<< HEAD
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
>>>>>>> parent of b0e1161 (djdjd)
/**
     * Genererar slumpat lösenord 
     */
    public String randomPassword(){
<<<<<<< HEAD
=======

    private String randomPassword(){
>>>>>>> Stashed changes
=======

    private String randomPassword(){
>>>>>>> Stashed changes
=======
>>>>>>> parent of b0e1161 (djdjd)
=======

    private String randomPassword(){
>>>>>>> Stashed changes
        String losen="";
        for(int i=0; i<11; i++){
            int ny=randomizer.nextInt(9);
            String nya=Integer.toString(ny);
            losen+=nya;
        }
        return losen;
    }
<<<<<<< Updated upstream
<<<<<<< HEAD
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
>>>>>>> parent of b0e1161 (djdjd)
    
    
/**
     * kontrollerar om användare är mentor
     */
    private boolean arMentor(String mentor){
        int mentors=Integer.parseInt(mentor);
        String sqlFraga="SELECT mentor FROM handlaggare WHERE aid=" + mentors;
        String svar=null;
        try{
            svar=idb.fetchSingle(sqlFraga);
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        if(svar==null){
            return true;
        }
        else{
            return false;
        }
    }

 
public int getMentor(){
    String st=tfMentor.getText();
    int it=0;
    if(st.isBlank()){
        it=0;
<<<<<<< HEAD
=======
   

=======
   

>>>>>>> Stashed changes
=======
   

>>>>>>> Stashed changes
private void fyllCbMentor(){
    String sqlFraga = "SELECT CONCAT(fornamn, ' ', efternamn) as namn FROM anstalld WHERE aid IN "
            + "(SELECT aid FROM handlaggare)";
    
    try {
    ArrayList<String> handlaggarLista = idb.fetchColumn(sqlFraga);
    
    for(String namn: handlaggarLista){
        String sqlAid = "SELECT aid FROM anstalld where CONCAT(fornamn, ' ', efternamn) = '"
                    + namn + "'";
        String aid = idb.fetchSingle(sqlAid);
        cbMentor.addItem(namn);
        mentorLista.put(aid, namn);
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> parent of b0e1161 (djdjd)
=======
>>>>>>> Stashed changes
    }
    
    } catch (InfException ex){
        System.out.println(ex.getMessage());
    }
    
}

<<<<<<< Updated upstream
<<<<<<< HEAD
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
>>>>>>> parent of b0e1161 (djdjd)
/**
     * kontrollerar om användare är admin
     */   
public boolean isAdmin(){
<<<<<<< HEAD
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
private String getSelectedAid(){
        String selectedMentor = (String) cbMentor.getSelectedItem();
        String aid = " ";
        
        for(String id : mentorLista.keySet()){
            String namn = mentorLista.get(id);
            if(selectedMentor != null && selectedMentor.equals(namn)){
                aid = id;               
            }
        }
        return aid;
}
    
private boolean isAdmin(){
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> parent of b0e1161 (djdjd)
=======
>>>>>>> Stashed changes
    boolean svar=false;
    if(chbHandlaggare.isSelected()){
        svar=false;
    }
    else if(chbAdmin.isSelected()){
        svar=true;
    }
    else{
        lblAnsvarBad.setVisible(true);
    }
    return svar;
}
  
public boolean alltMed(){
    boolean alltMed=false;
    // kontrollerar behörigheter är valda
    if(chbHandlaggare.isSelected()==false && chbAdmin.isSelected()==false){
    alltMed=false;
}
    else{
        alltMed=true;
    }
    return alltMed;
}    

    
    private void btnRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomActionPerformed
       tfLosenord.setText(randomPassword());
    }//GEN-LAST:event_btnRandomActionPerformed

    private void tfAnstallDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAnstallDatumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAnstallDatumActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void chbAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbAdminActionPerformed
        if(chbAdmin.isSelected()){
        chbHandlaggare.setSelected(false);
        gomFalt();
        }
    }//GEN-LAST:event_chbAdminActionPerformed

    private void chbHandlaggareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbHandlaggareActionPerformed
        if(chbHandlaggare.isSelected()){
        chbAdmin.setSelected(false);
        visaFalt();
        fyllCbMentor();
        }
    }//GEN-LAST:event_chbHandlaggareActionPerformed

    private void cbIngenMentorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIngenMentorActionPerformed
        if(cbIngenMentor.isSelected()){
            cbMentor.setVisible(false);
            lblAid.setVisible(false);
        } else if (!cbIngenMentor.isSelected()){
            cbMentor.setVisible(true);
            lblAid.setVisible(true);
        }
    }//GEN-LAST:event_cbIngenMentorActionPerformed

    private void cbMentorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMentorActionPerformed
       lblAid.setText(getSelectedAid());
    }//GEN-LAST:event_cbMentorActionPerformed



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaggTillAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaggTillAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaggTillAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaggTillAnstalld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new LaggTillAnstalld().setVisible(true);
            }
});
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRandom;
    private javax.swing.JButton btnSkapa;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cbAvdelning;
    private javax.swing.JCheckBox cbIngenMentor;
    private javax.swing.JComboBox<String> cbMentor;
    private javax.swing.JCheckBox chbAdmin;
    private javax.swing.JCheckBox chbHandlaggare;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblAdressBad;
    private javax.swing.JLabel lblAid;
    private javax.swing.JLabel lblAnstallDatum;
    private javax.swing.JLabel lblAnsvarBad;
    private javax.swing.JLabel lblAvdelning;
    private javax.swing.JLabel lblDatumBad1;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblEfternamnBad;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblEpostBad;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblFornamnBad;
    private javax.swing.JLabel lblLosenord;
    private javax.swing.JLabel lblLyckades;
    private javax.swing.JLabel lblMentor;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTelefonBad;
    private javax.swing.JTextField tfAdress;
    private javax.swing.JTextField tfAnstallDatum;
    private javax.swing.JTextField tfAnsvarighetsOmrade;
    private javax.swing.JTextField tfEfternamn;
    private javax.swing.JTextField tfEpost;
    private javax.swing.JTextField tfFornamn;
    private javax.swing.JTextField tfLosenord;
    private javax.swing.JTextField tfTelefon;
    // End of variables declaration//GEN-END:variables
}
