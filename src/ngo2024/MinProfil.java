/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024;
 import javax.swing.JOptionPane;
 import oru.inf.InfDB;
 import oru.inf.InfException;

/**
 *
 * @author Amali
 */
public class MinProfil extends javax.swing.JFrame {
  private InfDB idb;
  private String epost;
  private String firstname;
  private String lastname;
  private String department;
  private boolean isEditing = false;
    /**
     * Creates new form MinProfil
     */
 public MinProfil(InfDB idb, String epost) {
  this.idb=idb;
  this.epost=epost;
  this.firstname = getfirstname(epost);
  this.lastname = getlastname(epost);
  this.department = getdepartment(epost);
  String password = getPassword(epost);
  initComponents();
  
  txtFirstName.setText(firstname != null ? firstname : "");
  txtLastName.setText(lastname != null ? lastname : "");
  txtEmail.setText(epost != null ? epost : "");
  txtDepartment.setText(department != null ? department : "");
  txtPassword.setText(password != null ? password : "");
  txtPassword.setEchoChar('*');
    }

    public MinProfil(InfDB idb) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
  
    private String getfirstname(String epost){
       String txtFirstName="";
       try{
        String sqlQuery = "SELECT fornamn FROM anstalld WHERE epost = '" + epost +"'";
        txtFirstName = idb.fetchSingle(sqlQuery);
       } catch (InfException ex){
        System.out.println(ex.getMessage());
       } 
       return txtFirstName;
        }

    private String getlastname(String epost){
       String txtLastName="";
       try{
        String sqlQuery = "SELECT efternamn FROM anstalld WHERE epost = '" + epost +"'";
        txtLastName = idb.fetchSingle(sqlQuery);
       } catch (InfException ex){
        System.out.println(ex.getMessage());
       } 
       return txtLastName;
        }

    private String getdepartment (String epost){
       String txtDepartment="";
       try{
        String sqlQuery = "SELECT namn FROM avdelning WHERE avdid=" + "(SELECT avdelning FROM anstalld WHERE epost = '" + epost +"')";
        txtDepartment = idb.fetchSingle(sqlQuery);
       } catch (InfException ex){
        System.out.println(ex.getMessage());
       } 
       return txtDepartment;
        }
    
    private String getPassword(String epost) {
        String password = "";
        try {
            String sqlQuery = "SELECT losenord FROM anstalld WHERE epost ='" + epost + "'";
            password = idb.fetchSingle(sqlQuery);
        }   catch (InfException ex){
            System.out.println(ex.getMessage());
        }
            return password;
    }
        
       
   public MinProfil(){
        initComponents();
        txtFirstName.setText(firstname);
        txtLastName.setText(lastname);
        txtEmail.setText(epost);
        txtPassword.setText("");
       
           
        txtDepartment.setText(department);
           
        txtFirstName.setEditable(false);
        txtLastName.setEditable(false);
        txtEmail.setEditable(false);
        txtPassword.setEditable(false);
        
        }
       
    
       private void onChangeClicked(){
           txtFirstName.setEditable(true);
           txtLastName.setEditable(true);
           txtEmail.setEditable(true);
           
           Change.setText("Spara");
           Change.removeActionListener(Change.getActionListeners()[0]);
           Change.addActionListener(evt -> onSavedClicked()); 
       }
       private void onSavedClicked(){
           firstname = txtFirstName.getText();
           lastname = txtLastName.getText();
           epost = txtEmail.getText();
           
           txtFirstName.setEditable(false);
           txtLastName.setEditable(false);
           txtEmail.setEditable(false);
           txtPassword.setEditable(false);
           
           Change.setText("Ändra");
           Change.removeActionListener(Change.getActionListeners()[0]);
           Change.addActionListener(evt -> onChangeClicked());
           
           JOptionPane.showMessageDialog(this, "Ändringar Sparade!");
       }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MinProfil = new javax.swing.JLabel();
        Namn = new javax.swing.JLabel();
        Epost = new javax.swing.JLabel();
        Avdelning = new javax.swing.JLabel();
        Change = new javax.swing.JButton();
        txtFirstName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDepartment = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        Losenord = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        Tillbaka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MinProfil.setText("Min Profil");

        Namn.setText("Namn:");

        Epost.setText("Epost:");

        Avdelning.setText("Avdelning:");

        Change.setText("Ändra");
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });

        txtFirstName.setEnabled(false);
        txtFirstName.setFocusable(false);
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        txtEmail.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtEmail.setEnabled(false);
        txtEmail.setFocusable(false);
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtDepartment.setEditable(false);
        txtDepartment.setEnabled(false);
        txtDepartment.setFocusable(false);
        txtDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartmentActionPerformed(evt);
            }
        });

        txtLastName.setEnabled(false);
        txtLastName.setFocusable(false);
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        Losenord.setText("Lösenord:");

        txtPassword.setEditable(false);
        txtPassword.setEnabled(false);
        txtPassword.setFocusable(false);
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        Tillbaka.setText("X");
        Tillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Losenord)
                                .addGap(18, 18, 18)
                                .addComponent(txtPassword))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Epost, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MinProfil)
                                .addGap(21, 21, 21)))
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Tillbaka))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Namn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLastName))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Avdelning)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDepartment)))
                        .addGap(36, 36, 36))))
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MinProfil)
                    .addComponent(Tillbaka))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Namn)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Epost)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Avdelning)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Losenord)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(Change)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartmentActionPerformed

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
        if (isEditing) {
            firstname = txtFirstName.getText();
            lastname = txtLastName.getText();
            epost = txtEmail.getText();
            String newPassword = new String(txtPassword.getPassword());
            
            try {
                String updateQuery = "UPDATE anstalld SET fornamn = '"+ firstname +"', efternamn = '" + lastname + "', anstalld.epost = '" + epost + "', losenord = '" + newPassword + "' WHERE anstalld.epost = '" + this.epost + "'";
                idb.update(updateQuery);
                
                this.epost = epost;
           } catch (InfException ex) {
               JOptionPane.showMessageDialog (this, "Fel vid uppdatering av databasen:" );
                String message = ex.getMessage();
               return;
            }
            
            txtFirstName.setEditable(false);
            txtFirstName.setFocusable(false);
            txtFirstName.setEnabled(false);
            
            txtLastName.setEditable(false);
            txtLastName.setFocusable(false);
            txtLastName.setEnabled(false);
            
            txtEmail.setEditable(false);
            txtEmail.setFocusable(false);
            txtEmail.setEnabled(false);
            
            txtPassword.setEditable(false);
            txtPassword.setFocusable(false);
            txtPassword.setEnabled(false);
            txtPassword.setEchoChar('*');
            
            Change.setText("Ändra");
            
        JOptionPane.showMessageDialog(this, "Ändringar sparade!");
            isEditing = false;
        } else {
            
            String currentPassword = getPassword(this.epost);
            txtPassword.setText(currentPassword);
            
            txtFirstName.setEditable(true);
            txtFirstName.setFocusable(true);
            txtFirstName.setEnabled(true);
            
            txtLastName.setEditable(true);
            txtLastName.setFocusable(true);
            txtLastName.setEnabled(true);
            
            txtEmail.setEditable(true);
            txtEmail.setFocusable(true);
            txtEmail.setEnabled(true);
            
            txtPassword.setEditable(true);
            txtPassword.setFocusable(true);
            txtPassword.setEnabled(true);
            txtPassword.setEchoChar('\u0000');
            
            Change.setText("Spara");
            
            isEditing = true;
        }
    }//GEN-LAST:event_ChangeActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void TillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TillbakaActionPerformed
        this.dispose();
    }//GEN-LAST:event_TillbakaActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Avdelning;
    private javax.swing.JButton Change;
    private javax.swing.JLabel Epost;
    private javax.swing.JLabel Losenord;
    private javax.swing.JLabel MinProfil;
    private javax.swing.JLabel Namn;
    private javax.swing.JButton Tillbaka;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
