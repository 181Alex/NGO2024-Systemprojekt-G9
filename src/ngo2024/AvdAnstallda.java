/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024;

import TabellDesign.MultiLineCellRenderer;
import java.awt.Component;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author linneagottling
 */
public class AvdAnstallda extends javax.swing.JFrame {

    private InfDB idb;
    private int avdNmr;
    private ArrayList<String> epostLista = new ArrayList<>();
    private ArrayList<String> namnLista = new ArrayList<>();
    private ArrayList<String> telefonLista = new ArrayList<>();
    private ArrayList<String> mentorLista = new ArrayList<>();
    private DefaultTableModel model;

    /**
     * Initierar AvdAnstallda objekt
     * Användare kan se alla anställda på samma avdelning
     *
     * @param idb initierar fält för att interagera med databasen
     * @param avdNmr ID för användarens avdelning
     */
    public AvdAnstallda(InfDB idb, int avdNmr) {
        this.idb = idb;
        this.avdNmr = avdNmr;
        initComponents();
        konstrueraTabell();
        anstalldTabell();

    }

    /**
     * Skapar tabellmodel för att hantera data om avdelningens anställda
     */
    private void konstrueraTabell() {
        model = (DefaultTableModel) tblAnstallda.getModel();
        model.setRowCount(0);
        lblFelmeddelande.setVisible(false);
        btSeAlla.setVisible(false);
        tabellDesign();
    }

    /**
     * Bestämmer hur tabellen med anställdas information ska formateras
     */
    private void tabellDesign() {
        tblAnstallda.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblAnstallda.getColumnModel().getColumn(1).setPreferredWidth(168);
        tblAnstallda.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblAnstallda.getColumnModel().getColumn(3).setPreferredWidth(100);

        tblAnstallda.getColumnModel().getColumn(0).setCellRenderer(new MultiLineCellRenderer());
        tblAnstallda.getColumnModel().getColumn(1).setCellRenderer(new MultiLineCellRenderer());
        tblAnstallda.getColumnModel().getColumn(2).setCellRenderer(new MultiLineCellRenderer());
        tblAnstallda.getColumnModel().getColumn(3).setCellRenderer(new MultiLineCellRenderer());

        for (int row = 0; row < tblAnstallda.getRowCount(); row++) {
            int rowHeight = tblAnstallda.getRowHeight();
            for (int column = 0; column < tblAnstallda.getColumnCount(); column++) {
                Component comp = tblAnstallda.prepareRenderer(tblAnstallda.getCellRenderer(row, column), row, column);
                rowHeight = Math.max(rowHeight, comp.getPreferredSize().height);
            }
            tblAnstallda.setRowHeight(row, rowHeight);
        }
    }

    /**
     * Fyller tabell med data om avdelningens anställda
     */
    private void anstalldTabell() {

        try {
            String sqlFraga = "SELECT a.aid, CONCAT(a.fornamn, ' ', a.efternamn) AS namn, "
                    + "a.epost, a.telefon, CONCAT(b.fornamn, ' ', b.efternamn) AS mentor "
                    + "FROM anstalld a "
                    + "LEFT JOIN handlaggare h ON a.aid = h.aid "
                    + "LEFT JOIN anstalld b ON h.mentor = b.aid "
                    + "WHERE a.avdelning = " + avdNmr;

            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sqlFraga);

            for (HashMap<String, String> rad : resultat) {
                String namn = rad.get("namn");
                String epost = rad.get("epost");
                String telefon = rad.get("telefon");
                String mentor = rad.get("mentor");

                laggTillNyRad(namn, epost, telefon, mentor);
                laggTillRadInfo(namn, epost, telefon, mentor);

            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }

    }

    /**
     * Lägger till rad information i rätt lista
     */
    private void laggTillRadInfo(String namn, String epost, String telefon, String mentor) {
        epostLista.add(epost);
        namnLista.add(namn);
        telefonLista.add(telefon);
        mentorLista.add(mentor);
    }

    /**
     * Används för att lägga till rad i tabell
     */
    private void laggTillNyRad(String namn, String epost, String telefon, String mentor) {
        model.addRow(new Object[]{namn, epost, telefon, mentor});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spPanel = new javax.swing.JScrollPane();
        tblAnstallda = new javax.swing.JTable();
        lblHeader = new javax.swing.JLabel();
        tfSokruta = new javax.swing.JTextField();
        btSok = new javax.swing.JButton();
        btBack = new javax.swing.JButton();
        cbNamn = new javax.swing.JCheckBox();
        cbEpost = new javax.swing.JCheckBox();
        lblFelmeddelande = new javax.swing.JLabel();
        btSeAlla = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblAnstallda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Namn", "Epost", "Telefon", "Mentor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAnstallda.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        spPanel.setViewportView(tblAnstallda);

        lblHeader.setText("Anställda på avdelning");

        tfSokruta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSokrutaActionPerformed(evt);
            }
        });

        btSok.setText("Sök");
        btSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSokActionPerformed(evt);
            }
        });

        btBack.setText("X");
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });

        cbNamn.setText("Namn");
        cbNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNamnActionPerformed(evt);
            }
        });

        cbEpost.setText("Epost");
        cbEpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEpostActionPerformed(evt);
            }
        });

        lblFelmeddelande.setForeground(new java.awt.Color(255, 51, 51));
        lblFelmeddelande.setText("Felmeddelande");

        btSeAlla.setText("Se alla");
        btSeAlla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeAllaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btSeAlla)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSokruta, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btSok)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbNamn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbEpost))
                            .addComponent(lblFelmeddelande))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(btBack)
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeader)
                            .addComponent(lblFelmeddelande))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSokruta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSok)
                            .addComponent(cbNamn)
                            .addComponent(cbEpost)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btBack)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btSeAlla)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSokrutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSokrutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSokrutaActionPerformed

    private void btSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSokActionPerformed
        //Söker anställda efter epost om epost är iklickad
        //söker utefter namn om namn är iklickad
        //ger felmeddelande i annat fall
        
        String sokOrd = tfSokruta.getText().toLowerCase();
        lblFelmeddelande.setVisible(false);

        boolean hittad = false;
        model.setRowCount(0);

        btSeAlla.setVisible(true);

        if (cbEpost.isSelected()) {

            for (int i = 0; i < epostLista.size(); i++) {

                String epost = epostLista.get(i).toLowerCase();

                if (epost.equals(sokOrd) || epost.startsWith(sokOrd)) {
                    String namn = namnLista.get(i);
                    String telefon = telefonLista.get(i);
                    String mentor = mentorLista.get(i);

                    laggTillNyRad(namn, epost, telefon, mentor);

                    hittad = true;

                }
            }

        } else if (cbNamn.isSelected()) {

            for (int i = 0; i < namnLista.size(); i++) {

                String namn = namnLista.get(i).toLowerCase();

                if (namn.equals(sokOrd) || namn.startsWith(sokOrd)) {
                    String epost = epostLista.get(i);
                    String telefon = telefonLista.get(i);
                    String mentor = mentorLista.get(i);

                    laggTillNyRad(namn, epost, telefon, mentor);

                    hittad = true;
                }
            }
        }
        if (!cbNamn.isSelected() && !cbEpost.isSelected()) {
            lblFelmeddelande.setText("Du måste välja antingen epost eller namn");
            lblFelmeddelande.setVisible(true);
        } else if (!hittad) {
            lblFelmeddelande.setText("Inga resultat");
            lblFelmeddelande.setVisible(true);

        }

    }//GEN-LAST:event_btSokActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btBackActionPerformed

    private void cbEpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEpostActionPerformed
        if (cbEpost.isSelected()) {
            cbNamn.setSelected(false);
        }
    }//GEN-LAST:event_cbEpostActionPerformed

    private void cbNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNamnActionPerformed
        if (cbNamn.isSelected()) {
            cbEpost.setSelected(false);
        }
    }//GEN-LAST:event_cbNamnActionPerformed

    private void btSeAllaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeAllaActionPerformed
        konstrueraTabell();
        anstalldTabell();
    }//GEN-LAST:event_btSeAllaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvdAnstallda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvdAnstallda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvdAnstallda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvdAnstallda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AvdAnstallda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBack;
    private javax.swing.JButton btSeAlla;
    private javax.swing.JButton btSok;
    private javax.swing.JCheckBox cbEpost;
    private javax.swing.JCheckBox cbNamn;
    private javax.swing.JLabel lblFelmeddelande;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JScrollPane spPanel;
    private javax.swing.JTable tblAnstallda;
    private javax.swing.JTextField tfSokruta;
    // End of variables declaration//GEN-END:variables
}
