
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024;

import javax.swing.table.DefaultTableModel;
import ngo2024.Meny;
import ngo2024.Validering;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.List;
import TabellDesign.MultiLineCellRenderer;
import java.awt.Component;

//ska ta bort
import javax.swing.Timer;
import java.awt.Color;

/**
 *
 * @author
 */
public class MinaProjekt extends javax.swing.JFrame {

    private InfDB idb;
    private String anvandarEpost;
    private int personAid;
    private DefaultTableModel model;

    private ArrayList<String> projektNamnLista = new ArrayList<>();
    private ArrayList<String> statusLista = new ArrayList<>();

    /**
     * Creates new form MinaProjekt
     */
    public MinaProjekt(InfDB idb, String inloggadAnvandare) {
        this.idb = idb;
        anvandarEpost = inloggadAnvandare;
        personAid = getAid();

        initComponents();
        //konstrueraTabell();
        //tblLedarProj.setVisible(false);
      
        //ska ta bort
        Color[] colors = {Color.YELLOW,  Color.GREEN, Color.CYAN, Color.BLUE, Color.RED};
        int[] colorIndex = {0}; // Use an array for mutability inside the timer
        Timer timer = new Timer(500, e -> {
           jToggleButton1.setBackground(colors[colorIndex[0]]);
            colorIndex[0] = (colorIndex[0] + 1) % colors.length; // Cycle through colors
        });
        timer.start();
        
    }

    private int getAid() {
        try {
            String sqlFraga = "SELECT aid FROM anstalld WHERE epost = '" + anvandarEpost + "'";
            String resultat = idb.fetchSingle(sqlFraga);
            personAid = Integer.parseInt(resultat);
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }
        return personAid;
    }

    /*
    
    private void konstrueraTabell() {
        model = (DefaultTableModel) tblProjekts.getModel();
        model.setRowCount (0);
        tabellDesign();
    }
    
    private void tabellDesign() {
        tblProjekts.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblProjekts.getColumnModel().getColumn(1).setPreferredWidth(80);

        tblProjekts.getColumnModel().getColumn(0).setCellRenderer(new MultiLineCellRenderer());
        tblProjekts.getColumnModel().getColumn(1).setCellRenderer(new MultiLineCellRenderer());
        
        for (int rad = 0; rad < tblProjekts.getColumnCount() ; rad++){
            int radHojd = tblProjekts.getRowHeight();
            for(int kolumn = 0; kolumn < tblProjekts.getColumnCount() ; kolumn++){
                Component comp = tblProjekts.prepareRenderer(tblProjekts.getCellRenderer(rad, kolumn), rad, kolumn);
                radHojd = Math.max(radHojd, comp.getPreferredSize().height);
            }
        }
    
    }
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReturn = new javax.swing.JButton();
        lblMinaProj = new javax.swing.JLabel();
        lblProjekt = new javax.swing.JLabel();
        lblLedareProj = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLedarProj = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProjekt = new javax.swing.JTable();
        btAndra = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProjekts = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mina Projekt");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N

        btnReturn.setText("<- tillbaka");
        btnReturn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        btnReturn.setCursor(new java.awt.Cursor(java.awt.Cursor.SW_RESIZE_CURSOR));
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        lblMinaProj.setFont(new java.awt.Font("Typo Round Light Demo", 1, 24)); // NOI18N
        lblMinaProj.setForeground(new java.awt.Color(51, 0, 102));
        lblMinaProj.setText("Mina Projekt");

        lblProjekt.setText("Projekt");

        lblLedareProj.setText("Ledar Projekt");

        tblLedarProj.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 204), new java.awt.Color(255, 153, 255), null, null));
        tblLedarProj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Projekt Namn", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblLedarProj);

        jScrollPane2.setViewportView(jScrollPane1);

        tblProjekt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Projekt Namn", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblProjekt);

        btAndra.setText("Ändra");
        btAndra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAndraActionPerformed(evt);
            }
        });

        tblProjekts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Projekt", "Aktuell Status"
            }
        ));
        jScrollPane4.setViewportView(tblProjekts);

        jToggleButton1.setText("TEST KNAPP");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMinaProj, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                            .addComponent(lblLedareProj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblProjekt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 141, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAndra)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblMinaProj)
                .addGap(28, 28, 28)
                .addComponent(lblLedareProj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAndra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProjekt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        btnReturn.setBorderPainted(false);
        new Meny(idb, anvandarEpost).setVisible(true); //kanske inte m?ste vara new
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btAndraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAndraActionPerformed
        new ProjektChef(idb, anvandarEpost).setVisible(true);
    }//GEN-LAST:event_btAndraActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        new OmProjekt_1(idb, anvandarEpost, "2").setVisible(true);
        this.dispose();
        
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /*
    public void tblLedarProjModel() {

        DefaultTableModel tblModel = (DefaultTableModel) tblLedarProj.getModel();
        tblModel.setRowCount(0);

        try {
            Validering enValidKlass = new Validering(idb);

            int antalRader = 0;

            String sqlRad = "SELECT COUNT (*) FROM projekt";

            String svar = idb.fetchSingle(sqlRad);
            antalRader = Integer.parseInt(svar);

            for (int pid = 1; pid <= antalRader; pid++) {
                   
                if (enValidKlass.arChef(anvandarEpost)) {
                    tblLedarProj.setVisible(true); 

                    String sqlFragaProjNamn = "SELECT projektnamn"
                            + "FROM projekt WHERE pid =" + pid;

                    String sqlFragaStatus = "SELECT status"
                            + "FROM projekt WHERE pid =" + pid;

                    String projektNamn = idb.fetchSingle(sqlFragaProjNamn);
                    String projektStatus = idb.fetchSingle(sqlFragaStatus);

                    tblModel.addRow(new Object[]{projektNamn, projektStatus});
                }
            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }

    }

     */
    public void tblLedarProjModel() {

        DefaultTableModel tblModel = (DefaultTableModel) tblLedarProj.getModel();
        tblModel.setRowCount(0);

        try {
            // Validering enValidKlass = new Validering(idb);

            String sqlRad = "SELECT COUNT(*) FROM projekt";

            String svar = idb.fetchSingle(sqlRad);
            int antalRader = Integer.parseInt(svar);

            for (int pid = 1; pid <= antalRader; pid++) {

                String sqlFragaProjNamn = "SELECT projektnamn FROM projekt WHERE pid = " + pid;

                String sqlFragaStatus = "SELECT status FROM projekt WHERE pid = " + pid;

                String projektNamn = idb.fetchSingle(sqlFragaProjNamn);
                String projektStatus = idb.fetchSingle(sqlFragaStatus);

                tblModel.addRow(new Object[]{projektNamn, projektStatus});

            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }

    }

    /*
    public void tblProjektModel() {

        DefaultTableModel tblModel = (DefaultTableModel) tblProjekt.getModel();
        tblModel.setRowCount(0);

        try {
           // Validering enValidKlass = new Validering(idb);

            String sqlRad = "SELECT COUNT (*) FROM projekt";

            String svar = idb.fetchSingle(sqlRad);
            int antalRader = Integer.parseInt(svar);

            for (int pid = 1; pid <= antalRader; pid++) {
                   
                    String sqlFragaProjNamn = "SELECT projektnamn "
                            + "FROM projekt WHERE pid =" + pid;

                    String sqlFragaStatus = "SELECT status" 
                            + " FROM projekt WHERE pid =" + pid;

                    String projektNamn = idb.fetchSingle(sqlFragaProjNamn);
                    String projektStatus = idb.fetchSingle(sqlFragaStatus);

                    tblModel.addRow(new Object[]{projektNamn, projektStatus});
                
            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }

    }
     */
    public void tblProjektModel() {

        DefaultTableModel tblModel = (DefaultTableModel) tblLedarProj.getModel();
        tblModel.setRowCount(0);

        try {
            // Validering enValidKlass = new Validering(idb);

            String sqlRad = "SELECT COUNT(*) FROM projekt";

            String svar = idb.fetchSingle(sqlRad);
            int antalRader = Integer.parseInt(svar);

            for (int pid = 1; pid <= antalRader; pid++) {

                String sqlFragaProjNamn = "SELECT projektnamn FROM projekt WHERE pid = " + pid;

                String sqlFragaStatus = "SELECT status FROM projekt WHERE pid = " + pid;

                String projektNamn = idb.fetchSingle(sqlFragaProjNamn);
                String projektStatus = idb.fetchSingle(sqlFragaStatus);

                tblModel.addRow(new Object[]{projektNamn, projektStatus});

            }
        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }

    }

    /*
    public void tblProjektModel() {
        DefaultTableModel tblModel = (DefaultTableModel) tblProjekt.getModel();
        tblModel.setRowCount(0);
        
        try {
            String sqlFraga = "SELECT projektnamn, status FROM projekt";
            
            List<HashMap<String, String>> resultat = idb.fetchRows(sqlFraga);
            
            if (resultat != null) {
                for (HashMap<String, String> rad : resultat) {
                    String projektNamn = rad.get("projektnamn");
                    String projektStatus = rad.get("status");
                    
                    tblModel.addRow(new Object[]{projektNamn, projektStatus});
                }
                
            }
            else {
                System.out.println("No rows found");
            } 
        } catch (InfException ex) {
                    System.out.println("Error " + ex.getMessage());
                    }
    }
    
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MinaProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MinaProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MinaProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MinaProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MinaProjekt().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAndra;
    private javax.swing.JButton btnReturn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lblLedareProj;
    private javax.swing.JLabel lblMinaProj;
    private javax.swing.JLabel lblProjekt;
    private javax.swing.JTable tblLedarProj;
    private javax.swing.JTable tblProjekt;
    private javax.swing.JTable tblProjekts;
    // End of variables declaration//GEN-END:variables
}
